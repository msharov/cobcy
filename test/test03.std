------------------------------------------------------------
// test03.c
// Generated by Cobol-to-C compiler from test03.cob.

#include <coblib/cobfunc.h>

// This program is called test-program
enum {
    _pi__FirstParagraph,
    _pi__NParagraphs,
    _pi__Exit,
    _po__Next = 1
};


static struct {
    long vary;
    long varz;
    long varf;
    char filler000 [2];
    char name [19];
    char filler001 [2];
    char names [19];
    char filler002 [2];
    char city [16];
} varx UNUSED;

static void _SetVarValues (void)
{
    varx.vary = _zero_var;
    varx.varz = _zero_var;
    varx.varf = _zero_var;
    _AssignVarString (varx.filler000, " ", 1, 0);
    _AssignVarString (varx.name, _space_var, 18, 200);
    _AssignVarString (varx.filler001, " ", 1, 0);
    _AssignVarString (varx.names, _space_var, 18, 200);
    _AssignVarString (varx.filler002, " ", 1, 0);
    _AssignVarString (varx.city, "Baltimore", 15, 0);
}

static int _FirstParagraph (void)
{
    printf ("This is a cobol program");
    printf ("\n");
    _WriteIntegerVar (stdout, varx.vary, "9999");
    _WriteIntegerVar (stdout, varx.varz, "99999");
    _WriteIntegerVar (stdout, varx.varf, "99999");
    _WriteStringVar (stdout, varx.filler000, "x");
    _WriteStringVar (stdout, varx.name, "xxxxxxxxxxxxxxxxxx");
    _WriteStringVar (stdout, varx.filler001, "x");
    _WriteStringVar (stdout, varx.names, "xxxxxxxxxxxxxxxxxx");
    _WriteStringVar (stdout, varx.filler002, "x");
    _WriteStringVar (stdout, varx.city, "xxxxxxxxxxxxxxx");
    printf ("\n");
    varx.vary = 5;
    varx.varz = 5;
    _AssignVarString (varx.name, "Mike", 18, 0);
    _AssignVarString (varx.names, "Mike", 18, 0);
    _WriteIntegerVar (stdout, varx.vary, "9999");
    _WriteIntegerVar (stdout, varx.varz, "99999");
    _WriteIntegerVar (stdout, varx.varf, "99999");
    _WriteStringVar (stdout, varx.filler000, "x");
    _WriteStringVar (stdout, varx.name, "xxxxxxxxxxxxxxxxxx");
    _WriteStringVar (stdout, varx.filler001, "x");
    _WriteStringVar (stdout, varx.names, "xxxxxxxxxxxxxxxxxx");
    _WriteStringVar (stdout, varx.filler002, "x");
    _WriteStringVar (stdout, varx.city, "xxxxxxxxxxxxxxx");
    printf ("\n");
    return _po__Next;
}

int main (void)
{
    _InstallSignalHandlers();
    _SetVarValues();
    for (long cpi = _pi__FirstParagraph; cpi < _pi__NParagraphs;) {
	switch (cpi) {
	    case _pi__FirstParagraph:	cpi += _FirstParagraph(); break;
	    default:	cpi = _pi__Exit; assert (!"abnormal exit"); break;
	}
    }
    return EXIT_SUCCESS;
}
------------------------------------------------------------
This is a cobol program
   0    0    0                                       Baltimore      
   5    5    0 Mike               Mike               Baltimore      
------------------------------------------------------------
