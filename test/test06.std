------------------------------------------------------------
// test06.c
// Generated by Cobol-to-C compiler from test06.cob.

#include <coblib/cobfunc.h>

// This program is called test-program
enum {
    _pi__FirstParagraph,
    _pi__NParagraphs,
    _pi__Exit,
    _po__Next = 1
};


static struct {
    long entry_one;
    char filler000 [2];
    long entry_two;
    char filler001 [2];
    long entry_three;
    char filler002 [2];
    long entry_four;
    char filler003 [2];
    long entry_five;
} various_numbers UNUSED;

static struct {
    double other_one;
    char filler004 [2];
    double other_two;
    char filler005 [2];
    double other_three;
    char filler006 [2];
    double other_four;
    char filler007 [2];
    double other_five;
} other_numbers UNUSED;

static void _SetVarValues (void)
{
    various_numbers.entry_one = 12345;
    _AssignVarString (various_numbers.filler000, _space_var, 1, 200);
    various_numbers.entry_two = 12345;
    _AssignVarString (various_numbers.filler001, _space_var, 1, 200);
    various_numbers.entry_three = 12345;
    _AssignVarString (various_numbers.filler002, _space_var, 1, 200);
    various_numbers.entry_four = 12.30;
    _AssignVarString (various_numbers.filler003, _space_var, 1, 200);
    various_numbers.entry_five = 239847;
    other_numbers.other_one = 12345;
    _AssignVarString (other_numbers.filler004, _space_var, 1, 200);
    other_numbers.other_two = 12345;
    _AssignVarString (other_numbers.filler005, _space_var, 1, 200);
    other_numbers.other_three = 12345;
    _AssignVarString (other_numbers.filler006, _space_var, 1, 200);
    other_numbers.other_four = 12.30;
    _AssignVarString (other_numbers.filler007, _space_var, 1, 200);
    other_numbers.other_five = 239847;
}

static int _FirstParagraph (void)
{
    printf (" ,123.45  ,123.00  123.45  ,   .12 $ ,  2,398.47");
    printf ("\n");
    printf ("------------------------------------------------");
    printf ("\n");
    _WriteIntegerVar (stdout, various_numbers.entry_one, "9,999.99");
    _WriteStringVar (stdout, various_numbers.filler000, "x");
    _WriteIntegerVar (stdout, various_numbers.entry_two, "9,999.zz");
    _WriteStringVar (stdout, various_numbers.filler001, "x");
    _WriteIntegerVar (stdout, various_numbers.entry_three, "9999.99");
    _WriteStringVar (stdout, various_numbers.filler002, "x");
    _WriteIntegerVar (stdout, various_numbers.entry_four, "9,999.99");
    _WriteStringVar (stdout, various_numbers.filler003, "x");
    _WriteIntegerVar (stdout, various_numbers.entry_five, "$9,999,999.99");
    printf ("\n");
    printf (" ");
    printf ("\n");
    printf ("2,345.00 2,345.00 2345.00  , 12.30 $ ,239,847.00");
    printf ("\n");
    printf ("------------------------------------------------");
    printf ("\n");
    _WriteFloatVar (stdout, other_numbers.other_one, "9,999v99");
    _WriteStringVar (stdout, other_numbers.filler004, "x");
    _WriteFloatVar (stdout, other_numbers.other_two, "9,999v00");
    _WriteStringVar (stdout, other_numbers.filler005, "x");
    _WriteFloatVar (stdout, other_numbers.other_three, "9999v99");
    _WriteStringVar (stdout, other_numbers.filler006, "x");
    _WriteFloatVar (stdout, other_numbers.other_four, "9,999v99");
    _WriteStringVar (stdout, other_numbers.filler007, "x");
    _WriteFloatVar (stdout, other_numbers.other_five, "$9,999,999v99");
    printf ("\n");
    return _po__Next;
}

int main (void)
{
    _InstallSignalHandlers();
    _SetVarValues();
    for (long cpi = _pi__FirstParagraph; cpi < _pi__NParagraphs;) {
	switch (cpi) {
	    case _pi__FirstParagraph:	cpi += _FirstParagraph(); break;
	    default:	cpi = _pi__Exit; assert (!"abnormal exit"); break;
	}
    }
    return EXIT_SUCCESS;
}
------------------------------------------------------------
 ,123.45  ,123.00  123.45  ,   .12 $ ,  2,398.47
------------------------------------------------
 ,123.45  ,123.00  123.45  ,   .12 $ ,  2,398.47
 
2,345.00 2,345.00 2345.00  , 12.30 $ ,239,847.00
------------------------------------------------
2,345.00 2,345.00 2345.00  , 12.30 $ ,239,847.00
------------------------------------------------------------
