------------------------------------------------------------
// test11.c
// Generated by Cobol-to-C compiler from test11.cob.

#include <coblib/cobfunc.h>

// This program is called test-program
enum {
    _pi__FirstParagraph,
    _pi__NParagraphs,
    _pi__Exit,
    _po__Next = 1
};

static char name [6] UNUSED;

static char name_print [3] UNUSED;

static char name_3 [2] UNUSED;

static long getal UNUSED;

static double getal2 UNUSED;

static long teller UNUSED;


static void _SetVarValues (void)
{
}

static int _FirstParagraph (void)
{
    _AssignVarString (name, "a cde", 5, 0);
    _AssignVarString (name_3, name, 1, 5);
    _AssignVarString (name_print, name, 2, 5);
    getal = 5000;
    getal2 = 53;
    getal = getal + 5;
    _WriteStringVar (stdout, name, "xxxxx");
    printf ("\n");
    _WriteStringVar (stdout, name_print, "x0bx");
    printf ("\n");
    _WriteStringVar (stdout, name_3, "bbbx");
    printf ("\n");
    _WriteIntegerVar (stdout, getal, "9,999");
    printf ("\n");
    _WriteFloatVar (stdout, getal2, "999v99");
    printf ("\n");
    printf ("\"");
    printf ("hello");
    printf ("\"");
    printf ("\"");
    printf ("\"");
    printf ("\n");
    printf ("hello all");
    printf ("\n");
    teller = 7;
    if ((teller == 7) && (teller == 10))
    {
	printf ("yes");
	printf ("\n");
    }
    if ((_Alphabetic (name)))
    {
	teller = 12;
    }
    if ((teller == 12))
    {
	printf ("teller is 12");
	printf ("\n");
    }
    else
    {
	printf ("teller is not 12 !");
	printf ("\n");
    }
    return _pi__Exit;
    return _po__Next;
}

int main (void)
{
    _InstallSignalHandlers();
    _SetVarValues();
    for (long cpi = _pi__FirstParagraph; cpi < _pi__NParagraphs;) {
	switch (cpi) {
	    case _pi__FirstParagraph:	cpi += _FirstParagraph(); break;
	    default:	cpi = _pi__Exit; assert (!"abnormal exit"); break;
	}
    }
    return EXIT_SUCCESS;
}
------------------------------------------------------------
a cde
a0  
   a
5,005
 53.00
"hello"""
hello all
teller is 12
------------------------------------------------------------
