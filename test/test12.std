------------------------------------------------------------
// test12.c
// Generated by Cobol-to-C compiler from test12.cob.

#include <coblib/cobfunc.h>

// This program is called test-program
enum {
    _pi__FirstParagraph,
    _pi__NParagraphs,
    _pi__Exit,
    _po__Next = 1
};


static struct {
    long vary;
    long varz;
    char tok1 [19];
} varx UNUSED;

static void _SetVarValues (void)
{
    varx.varz = 60;
}

static int _FirstParagraph (void)
{
    varx.vary = 8;
    if ((varx.vary == 8))
    {
	_AssignVarString (varx.tok1, "vary is eight", 18, 0);
	varx.varz = 55;
	if ((varx.varz == 55))
	{
	    _WriteIntegerVar (stdout, varx.varz, "9999");
	    printf ("\n");
	    _WriteStringVar (stdout, varx.tok1, "xxxxxxxxxxxxxxxxxx");
	    printf ("\n");
	}
    }
    varx.varz = (6 + varx.vary) / 5;
    _WriteIntegerVar (stdout, varx.varz, "9999");
    printf (" is not rounded");
    printf ("\n");
    varx.varz = _RoundResult ((6.0 + (double)varx.vary) / 5.0, "9999");
    _WriteIntegerVar (stdout, varx.varz, "9999");
    printf (" is rounded");
    printf ("\n");
    return _po__Next;
}

int main (void)
{
    _InstallSignalHandlers();
    _SetVarValues();
    for (long cpi = _pi__FirstParagraph; cpi < _pi__NParagraphs;) {
	switch (cpi) {
	    case _pi__FirstParagraph:	cpi += _FirstParagraph(); break;
	    default:	cpi = _pi__Exit; assert (!"abnormal exit"); break;
	}
    }
    return EXIT_SUCCESS;
}
------------------------------------------------------------
  55
vary is eight     
   2 is not rounded
   3 is rounded
------------------------------------------------------------
